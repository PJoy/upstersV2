{% extends 'base.html.twig' %}

{%  block body %}
    <div class="register-div-main">
    <div class="container register-container">
        <div class="row">
            <div class="col-xs-12">
                <div class="col-md-12 text-center">
                    <h1>Créez votre compte sur Upsters</h1>
                </div>
                <div class="register-container-in col-md-12">
                <div class="col-xs-12">
                    <div class="col-xs-4 text-center">
                        <div id="number1" class="numberCircle active" >1</div>
                        <div class="col-xs-3"></div>
                        <div class="col-xs-6">
                            <p>Je choisis ma méthode d'inscription</p>
                        </div>
                        <div class="col-xs-3"></div>
                    </div>
                    <div class="col-xs-4 text-center">
                        <div id="number2" class="numberCircle">2</div>
                        <div class="col-xs-3"></div>
                        <div class="col-xs-6">
                            <p>Je remplis mes infos</p>
                        </div>
                        <div class="col-xs-3"></div>

                    </div>
                    <div  class="col-xs-4 text-center">
                        <div id="number3" class="numberCircle">3</div>
                        <div class="col-xs-3"></div>
                        <div class="col-xs-6">
                            <p>Je sélectionne mes services</p>
                        </div>
                        <div class="col-xs-3"></div>
                    </div>
                </div>
                <div class="register col-md-12 register-step-1 text-center active">
                    <div class="col-md-4"></div>
                    <div class="col-md-4">
                        <!--<div class="col-md-12 btn fake-btn-green-inv disabled btn-facebook fb-login-button" scope="public_profile,email" onlogin="checkLoginState();">M'inscrire avec Facebook</div>-->
                        <div class="col-md-12 btn fake-btn-orange-inv disabled btn-gmail">M'inscrire avec Gmail</div>
                        <div class="col-md-12 fb-login-button" scope="public_profile,email" onlogin="checkLoginState();">M'inscrire via Facebook</div>
                        <div class="col-xs-5"><hr></div>
                        <div class="col-xs-2">OU</div>
                        <div class="col-xs-5"><hr></div>
                        <div id="to-step-2" class="col-md-12 btn fake-btn-orange">M'inscrire avec mon e-mail</div>
                        <p>En créant un compte, j'accepte les <a href="{{ path('CGU') }}">Conditions Générales d'Utilisation</a>
                            et la <a href="{{ path('CGU') }}">politique de confidentialité</a> d'Upsters.</p>
                        <a href="#" data-featherlight="#lightbox-login"><div class="col-md-12 btn fake-btn-green">Déjà membre d'Upsters ?</div></a>

                    </div>
                    <div class="col-md-4"></div>
                </div>
                <div class="popup-container" style="display: none">
                    <div id="lightbox-login" >
                        {{ render(controller('AppBundle:Security:login')) }}
                    </div>
                </div>

                <div class="register col-md-12 register-step-2">
                    <div class="col-md-4"></div>
                    <div class="col-md-4">
                        <div class="col-xs-12">
                            {{ form_start(form) }}
                            {{ form_row(form.email) }}
                            {{ form_row(form.plainPassword.first, {
                                'label' : 'Mot de passe'
                            }) }}
                            {{ form_row(form.plainPassword.second, {
                                'label' : 'Répéter le mot de passe'
                            }) }}

                            <div id="to-step-3" class="btn fake-btn-green col-xs-12">S'inscrire</div>
                        </div>
                    </div>
                    <div class="col-md-4"></div>
                </div>

                <div class="register col-md-12 register-step-3">
                    <div class="col-md-2"></div>
                    <div class="col-md-8">
                        <div class="col-xs-12 register-cat-entrepreneur">
                            <div class="col-xs-2 checkbox-container">
                                {{ form_row(form.roles.0) }}
                            </div>
                            <div class="col-xs-10 register-cat-desc">Je suis entrepreneur et je souhaite consulter l'annuaire et la médiathèque</div>
                        </div>
                        <hr>
                        <div class="col-xs-12 register-cat-resource">
                            <div class="col-xs-2 checkbox-container">
                                {{ form_row(form.roles.1) }}
                            </div>
                            <div class="col-xs-10 register-cat-desc">Je fournis des services pour les entrepreneurs et je souhaite figurer dans l'annuaire</div>
                        </div>
                        <div class="col-xs-1"></div>
                        <div class="col-xs-10 register-CTA-news">
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox"> Je souhaite recevoir par e-mail des promotions, des sondages et les actualités sur Upsters, ainsi que sur les campagnes et les services de ses partenaires.
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-1"></div>
                        <div class="col-xs-12">
                            <div class="col-xs-1"></div>
                            <button type="submit" class="btn fake-btn-green col-xs-10" formnovalidate>S'inscrire !</button>
                            {{ form_end(form) }}

                            <div class="col-xs-1"></div>
                        </div>
                    </div>
                    <div class="col-md-2"></div>
                </div>
                </div>
            </div>
        </div>
    </div>
    </div>

{% endblock %}

{% block additional_javascript %}
    <!-- facebook JS SDK -->
    <script>
        // This is called with the results from from FB.getLoginStatus().
        function statusChangeCallback(response) {
            console.log('statusChangeCallback');
            console.log(response);
            // The response object is returned with a status field that lets the
            // app know the current login status of the person.
            // Full docs on the response object can be found in the documentation
            // for FB.getLoginStatus().
            if (response.status === 'connected') {
                // Logged into your app and Facebook.
                testAPI();
            } else if (response.status === 'not_authorized') {
                // The person is logged into Facebook, but not your app.
                document.getElementById('status').innerHTML = 'Please log ' +
                        'into this app.';
            } else {
                // The person is not logged into Facebook, so we're not sure if
                // they are logged into this app or not.
                document.getElementById('status').innerHTML = 'Please log ' +
                        'into Facebook.';
            }
        }

        // This function is called when someone finishes with the Login
        // Button.  See the onlogin handler attached to it in the sample
        // code below.
        function checkLoginState() {
            FB.getLoginStatus(function(response) {
                statusChangeCallback(response);
            });
        }

        window.fbAsyncInit = function() {
            FB.init({
                appId      : '{{ fbKey }}',
                cookie     : true,  // enable cookies to allow the server to access
                                    // the session
                xfbml      : true,  // parse social plugins on this page
                version    : 'v2.5' // use graph api version 2.5
            });

            // Now that we've initialized the JavaScript SDK, we call
            // FB.getLoginStatus().  This function gets the state of the
            // person visiting this page and can return one of three states to
            // the callback you provide.  They can be:
            //
            // 1. Logged into your app ('connected')
            // 2. Logged into Facebook, but not your app ('not_authorized')
            // 3. Not logged into Facebook and can't tell if they are logged into
            //    your app or not.
            //
            // These three cases are handled in the callback function.

            FB.getLoginStatus(function(response) {
                //statusChangeCallback(response);
            });

        };

        // Load the SDK asynchronously
        (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        // Here we run a very simple test of the Graph API after login is
        // successful.  See statusChangeCallback() for when this call is made.
        function testAPI() {
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me', {fields: 'email,name'}, function(response) {
                if (response.hasOwnProperty("error")) {
                    console.log("Error: " + response.error.message);
                } else {
                    var pwd = Math.random().toString(36).substring(7);
                    console.log('Successful login for: ' + response.name);
                    $('#user_registration_form_name').val(response.name.replace(/[^A-Z0-9]/ig, ""));
                    $('#user_registration_form_email').val(response.email);
                    $('#user_registration_form_plainPassword_first').val(pwd);
                    $('#user_registration_form_plainPassword_second').val(pwd);
                    toStep(3);
                    console.log(response.name.replace(/[^A-Z0-9]/ig, ""));
                    console.log(response.email);

                }
            });
        }
    </script>

    <script>
        function toStep(n){
            jQuery('.register').removeClass('active');
            jQuery('.register-step-'+n).addClass('active');

            jQuery('.numberCircle').removeClass('active');
            jQuery('#number'+n).addClass('active');
        }


        jQuery('#to-step-1').click(function(){
            toStep(1);
        });

        jQuery('#to-step-2').click(function(){
            toStep(2);
        });

        jQuery('#to-step-3').click(function(){
            toStep(3);
        });

        //remove checkbox text (sorry...)
        jQuery('.checkbox > label:not(:last)').contents().filter(function(){return this.nodeType === 3;}).remove();

    </script>
{% endblock %}